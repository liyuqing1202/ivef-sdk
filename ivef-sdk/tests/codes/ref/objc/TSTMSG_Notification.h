/* 
 *  TSTMSG_Notification
 *
 *  TSTMSG_Notification is free software: you can redistribute it and/or modify
 *  it under the terms of the GNU Lesser General Public License as published by
 *  the Free Software Foundation, either version 3 of the License, or
 *  (at your option) any later version.
 *
 *  Foobar is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY ); without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 **********************************************************************************
 *  WARNING: THIS CODE WAS GENERATED DO NOT MODIFY, CHANGE THE XSD INSTEAD
 *  Generated by schema2code on Tue Jan 8 23:30:40 2013.
 **********************************************************************************
 *  Copyright 2010
 *
 */

#import <Foundation/Foundation.h>
#import "TSTEvent.h"
#import "TSTMessage.h"

//-----------------------------------------------------------
//! \brief       Class definition of TSTMSG_Notification
//!
//! MESSAGE sent by the supplier containing event data.
//!

@interface TSTMSG_Notification : NSObject { 
    NSMutableArray *m_events;
    BOOL m_eventPresent;
    NSMutableArray *m_messages;
    BOOL m_messagePresent;
}

//!Remover for Event
//!
-(BOOL) removeEvent:(TSTEvent *) val;
//!Setter for Event
//!
-(BOOL) addEvent:(TSTEvent *) val;
//!Getter for Event
//!
-(TSTEvent *) eventAt:(int) i;
//!Element counter for Event
//!
-(int) countOfEvents;
//!Get all elements for Event
//!
-(NSArray *) events;

/* Message:
   Plain text message or a coded message, which uses a code to identify the message and optional arguments to pass along variable */
//!Remover for Message
//!
-(BOOL) removeMessage:(TSTMessage *) val;
//!Setter for Message
//!
-(BOOL) addMessage:(TSTMessage *) val;
//!Getter for Message
//!
-(TSTMessage *) messageAt:(int) i;
//!Element counter for Message
//!
-(int) countOfMessages;
//!Get all elements for Message
//!
-(NSArray *) messages;
//!Set attributes by providing a key/value dictionary
//!

-(BOOL) setAttributes:(NSDictionary *)attributeDict;
//!Get attributes as a key/value dictionary
//!
-(NSDictionary *) attributes;
//!Get a XML representation of this class
//!returns nil if not all required fields are set
//!
-(NSString *) XML;
//!Get a string representation of this class
//!
-(NSString *) stringValue;
-(NSString *) stringValueWithLead:(NSString *) lead;
//!Helper routine to encode any string to an XML escaped string
//!
-(NSString *) encode: (NSString *) input;

@end



